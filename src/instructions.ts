export const instructionTable = ['NOP', 'LXI', 'STAX', 'INX', 'INR', 'DCR', 'MVI', 'RLC', 'NOP', 'DAD', 'LDAX', 'DCX', 'INR', 'DCR', 'MVI', 'RRC',
'NOP', 'LXI', 'STAX', 'INX', 'INR', 'DCR', 'MVI', 'RAL', 'NOP', 'DAD', 'LDAX', 'DCX', 'INR', 'DCR', 'MVI', 'RAR',
'NOP', 'LXI', 'SHLD', 'INX', 'INR', 'DCR', 'MVI', 'DAA', 'NOP', 'DAD', 'LHLD', 'DCX', 'INR', 'DCR', 'MVI', 'CMA',
'NOP', 'LXI', 'STA', 'INX', 'INR', 'DCR', 'MVI', 'STC', 'NOP', 'DAD', 'LDA', 'DCX', 'INR', 'DCR', 'MVI', 'CMC',
'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV',
'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV',
'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV',
'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'HLT', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV', 'MOV',
'ADD', 'ADD', 'ADD', 'ADD', 'ADD', 'ADD', 'ADD', 'ADD', 'ADC', 'ADC', 'ADC', 'ADC', 'ADC', 'ADC', 'ADC', 'ADC',
'SUB', 'SUB', 'SUB', 'SUB', 'SUB', 'SUB', 'SUB', 'SUB', 'SBB', 'SBB', 'SBB', 'SBB', 'SBB', 'SBB', 'SBB', 'SBB',
'ANA', 'ANA', 'ANA', 'ANA', 'ANA', 'ANA', 'ANA', 'ANA', 'XRA', 'XRA', 'XRA', 'XRA', 'XRA', 'XRA', 'XRA', 'XRA',
'ORA', 'ORA', 'ORA', 'ORA', 'ORA', 'ORA', 'ORA', 'ORA', 'CMP', 'CMP', 'CMP', 'CMP', 'CMP', 'CMP', 'CMP', 'CMP',
'RNZ', 'POP', 'JNZ', 'JMP', 'CNZ', 'PUSH', 'ADI', 'RST', 'RZ', 'RET', 'JZ', 'JMP', 'CZ', 'CALL', 'ACI', 'RST',
'RNC', 'POP', 'JNC', 'OUT', 'CNC', 'PUSH', 'SUI', 'RST', 'RC', 'RET', 'JC', 'IN', 'CC', 'CALL', 'SBI', 'RST',
'RPO', 'POP', 'JPO', 'XTHL', 'CPO', 'PUSH', 'ANI', 'RST', 'RPE', 'PCHL', 'JPE', 'XCHG', 'CPE', 'CALL', 'XRI', 'RST',
'RP', 'POP', 'JP', 'DI', 'CP', 'PUSH', 'ORI', 'RST', 'RM', 'SPHL', 'JM', 'EI', 'CM', 'CALL', 'CPI', 'RST'];

export  const instructionSize = [1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,
1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,
1, 3, 3, 1, 1, 1, 2, 1, 1, 1, 3, 1, 1, 1, 2, 1,
1, 3, 3, 1, 1, 1, 2, 1, 1, 1, 3, 1, 1, 1, 2, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 3, 3, 3, 1, 2, 1, 1, 1, 3, 3, 3, 3, 2, 1,
1, 1, 3, 2, 3, 1, 2, 1, 1, 1, 3, 2, 3, 3, 2, 1,
1, 1, 3, 1, 3, 1, 2, 1, 1, 1, 3, 1, 3, 3, 2, 1,
1, 1, 3, 1, 3, 1, 2, 1, 1, 1, 3, 1, 3, 3, 2, 1];

export const instructionsDisasm = ['NOP', 'LXI B', 'STAX B', 'INX B', 'INR B', 'DCR B', 'MVI B', 'RLC', 'NOP', 'DAD B', 'LDAX B', 'DCX B', 'INR C', 'DCR C', 'MVI C', 'RRC',
'NOP', 'LXI D', 'STAX D', 'INX D', 'INR D', 'DCR D', 'MVI D', 'RAL', 'NOP', 'DAD D', 'LDAX D', 'DCX D', 'INR E', 'DCR E', 'MVI E', 'RAR',
'NOP', 'LXI H', 'SHLD', 'INX H', 'INR H', 'DCR H', 'MVI H', 'DAA', 'NOP', 'DAD H', 'LHLD', 'DCX H', 'INR L', 'DCR L', 'MVI L', 'CMA',
'NOP', 'LXI SP', 'STA', 'INX SP', 'INR M', 'DCR M', 'MVI M', 'STC', 'NOP', 'DAD SP', 'LDA', 'DCX SP', 'INR A', 'DCR A', 'MVI A', 'CMC',
'MOV B, B', 'MOV B, C', 'MOV B, D', 'MOV B, E', 'MOV B, H', 'MOV B, L', 'MOV B, M', 'MOV B, A', 'MOV C, B', 'MOV C, C', 'MOV C, D', 'MOV C, E', 'MOV C, H', 'MOV C, L', 'MOV C, M', 'MOV C, A',
'MOV D, B', 'MOV D, C', 'MOV D, D', 'MOV D, E', 'MOV D, H', 'MOV D, L', 'MOV D, M', 'MOV D, A', 'MOV E, B', 'MOV E, C', 'MOV E, D', 'MOV E, E', 'MOV E, H', 'MOV E, L', 'MOV E, M', 'MOV E, A',
'MOV H, B', 'MOV H, C', 'MOV H, D', 'MOV H, E', 'MOV H, H', 'MOV H, L', 'MOV H, M', 'MOV H, A', 'MOV L, B', 'MOV L, C', 'MOV L, D', 'MOV L, E', 'MOV L, H', 'MOV L, L', 'MOV L, M', 'MOV L, A',
'MOV M, B', 'MOV M, C', 'MOV M, D', 'MOV M, E', 'MOV M, H', 'MOV M, L', 'HLT', 'MOV M, A', 'MOV A, B', 'MOV A, C', 'MOV A, D', 'MOV A, E', 'MOV A, H', 'MOV A, L', 'MOV A, M', 'MOV A, A',
'ADD B', 'ADD C', 'ADD D', 'ADD E', 'ADD H', 'ADD L', 'ADD M', 'ADD A', 'ADC B', 'ADC C', 'ADC D', 'ADC E', 'ADC H', 'ADC L', 'ADC M', 'ADC A',
'SUB B', 'SUB C', 'SUB D', 'SUB E', 'SUB H', 'SUB L', 'SUB M', 'SUB A', 'SBB B', 'SBB C', 'SBB D', 'SBB E', 'SBB H', 'SBB L', 'SBB M', 'SBB A',
'ANA B', 'ANA C', 'ANA D', 'ANA E', 'ANA H', 'ANA L', 'ANA M', 'ANA A', 'XRA B', 'XRA C', 'XRA D', 'XRA E', 'XRA H', 'XRA L', 'XRA M', 'XRA A',
'ORA B', 'ORA C', 'ORA D', 'ORA E', 'ORA H', 'ORA L', 'ORA M', 'ORA A', 'CMP B', 'CMP C', 'CMP D', 'CMP E', 'CMP H', 'CMP L', 'CMP M', 'CMP A',
'RNZ', 'POP B', 'JNZ', 'JMP', 'CNZ', 'PUSH B', 'ADI', 'RST 0', 'RZ', 'RET', 'JZ', 'JMP', 'CZ', 'CALL', 'ACI', 'RST 1',
'RNC', 'POP D', 'JNC', 'OUT', 'CNC', 'PUSH D', 'SUI', 'RST 2', 'RC', 'RET', 'JC', 'IN', 'CC', 'CALL', 'SBI', 'RST 3',
'RPO', 'POP H', 'JPO', 'XTHL', 'CPO', 'PUSH H', 'ANI', 'RST 4', 'RPE', 'PCHL', 'JPE', 'XCHG', 'CPE', 'CALL', 'XRI', 'RST 5',
'RP', 'POP PSW', 'JP', 'DI', 'CP', 'PUSH PSW', 'ORI', 'RST 6', 'RM', 'SPHL', 'JM', 'EI', 'CM', 'CALL', 'CPI', 'RST 7'];

export const instructionCycles = [
    4, 10, 7, 5, 5, 5, 7, 4, 4, 10, 7, 5, 5, 5, 7, 4,
    4, 10, 7, 5, 5, 5, 7, 4, 4, 10, 7, 5, 5, 5, 7, 4,
    4, 10, 16, 5, 5, 5, 7, 4, 4, 10, 16, 5, 5, 5, 7, 4,
    4, 10, 13, 5, 10, 10, 10, 4, 4, 10, 13, 5, 5, 5, 7, 4,
    5, 5, 5, 5, 5, 5, 7, 5, 5, 5, 5, 5, 5, 5, 7, 5,
    5, 5, 5, 5, 5, 5, 7, 5, 5, 5, 5, 5, 5, 5, 7, 5,
    5, 5, 5, 5, 5, 5, 7, 5, 5, 5, 5, 5, 5, 5, 7, 5,
    7, 7, 7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 7, 5,
    4, 4, 4, 4, 4, 4, 7, 4, 4, 4, 4, 4, 4, 4, 7, 4,
    4, 4, 4, 4, 4, 4, 7, 4, 4, 4, 4, 4, 4, 4, 7, 4,
    4, 4, 4, 4, 4, 4, 7, 4, 4, 4, 4, 4, 4, 4, 7, 4,
    4, 4, 4, 4, 4, 4, 7, 4, 4, 4, 4, 4, 4, 4, 7, 4,
    5, 10, 10, 10, 11, 11, 7, 11, 5, 10, 10, 10, 11, 17, 7, 11,
    5, 10, 10, 10, 11, 11, 7, 11, 5, 10, 10, 10, 11, 17, 7, 11,
    5, 10, 10, 18, 11, 11, 7, 11, 5, 5, 10, 5, 11, 17, 7, 11,
    5, 10, 10, 4, 11, 11, 7, 11, 5, 5, 10, 4, 11, 17, 7, 11
];

export const parityCache = [
    true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true,false,true,true,false,true,false,false,true,true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true,true,false,false,true,false,true,true,false,true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true,false,true,true,false,true,false,false,true,true,false,false,true,false,true,true,false,true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true,true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true,false,true,true,false,true,false,false,true,true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true,true,false,false,true,false,true,true,false,true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true,true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true,false,true,true,false,true,false,false,true,true,false,false,true,false,true,true,false,true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true,false,true,true,false,true,false,false,true,true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true,true,false,false,true,false,true,true,false,true,false,false,true,false,true,true,false,false,true,true,false,true,false,false,true
];
